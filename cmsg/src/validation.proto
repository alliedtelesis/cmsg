syntax = "proto2";

import "google/protobuf/descriptor.proto";

enum common_string_format
{
    /* Either an IPv4 address or an IPv6 address */
    IP_ADDRESS = 1;

    /* ISO 8601 UTC timestamp. i.e "yyyy-mm-ddTHH:MM:SSZ" */
    UTC_TIMESTAMP = 2;

    /* Three groups of four hexadecimal digits, separated by dots. Both uppercase
     * and lowercase characters are accepted. i.e. 0123.ABcd.ff12 */
    MAC_ADDRESS = 3;
}

// More options may be added in the future, see the following project for
// potential options that could be implemented:
// https://github.com/mwitkow/go-proto-validators/blob/master/validator.proto
message FieldValidation
{
    /* The integer field value is strictly greater than or equal to this value */
    optional int64 int_ge = 1;

    /* The integer field value is strictly less than or equal to this value */
    optional int64 int_le = 2;

    /* Note that if the string field to test is NULL then this validation is not run */
    optional common_string_format string_format = 3;

    /* The error message to return if the field validation fails */
    optional string error_message = 4;
}

// This extension can be used to tell the cmsg compiler to autogenerate a
// validation function for the message. Based on the FieldValidation options
// the function will return true/false depending if the message validates.
// The function generated is simply the message name appended with '_validate'.
extend google.protobuf.FieldOptions {
    optional FieldValidation validation = 72295729;
}

// This extension can be used to automatically call the message validate
// function generated from the 'validation' extension on the server side
// before the 'impl' function is called. If the message does not validate
// then an 'ant_result' message is created and returned to the API caller
// skipping the 'impl' function entirely. Note that to use this extension
// your method must return an 'ant_result' message.
extend google.protobuf.MethodOptions {
    optional bool auto_validation = 72295730;
}
