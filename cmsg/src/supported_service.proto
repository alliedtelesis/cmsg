syntax = "proto2";

import "google/protobuf/descriptor.proto";

message ServiceSupportInfo
{
    /* The path to the file in the file system indicating support for this service */
    optional string file_path = 1;

    /* The message to return if the service is not supported */
    optional string message = 2;

    /* The ant code to return if the service is not supported */
    optional string code = 3;
}

// This extension can be used to cause the autogenerated API functions to
// check for the existence of a file before attempting to send any data to
// a CMSG server. If the file does not exist then it is assumed that the
// service is currently not supported, even though the RPC API functions
// are available. If the service is not supported then an 'ant_result'
// message is created and returned to the API caller. This message will be
// set with the supplied code and message.
//
// Note that to use this extension all methods in the service must return
// an 'ant_result' message or a message with a nested 'ant_result' message
// in a field called _error_info.
//
// Note that if a composite client is used when calling any of the RPCs
// implemented by a service using this extension then if the check fails
// only a single message is returned, rather than a message for every client
// in the composite client.
extend google.protobuf.ServiceOptions {
    optional ServiceSupportInfo service_support_check = 72295731;
}

// Allow a specific method in a service to avoid the autogenerated check for
// the existence of a file.
extend google.protobuf.MethodOptions {
    optional bool disable_service_support_check = 72295732;
}
