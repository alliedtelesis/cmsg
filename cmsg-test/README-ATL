 
The cmsg-test program gets build when compiling on a local machine with the local-install script.
It might be useful to do some tests when developing on the library. It is also a lot quicker to
tests on the workstation than on a switch.
What seems a bit worrying is that the test program crashes on the pc when the library has
caused memory corruptions but not on the switch. Even if it is definitely a memory corruption.

The program can test:
client/server tcp/tipc rpc/oneway queuing:
./cmsg-test --cs --tcp
./cmsg-test --cs --tcp --oneway
./cmsg-test --cs --tcp --oneway --queue
./cmsg-test --cs --tipc
./cmsg-test --cs --tipc --oneway
./cmsg-test --cs --tipc --oneway --queue

publisher/subscriber tcp/tipc queuing
./cmsg-test --ps --tcp
./cmsg-test --ps --tcp --queue
./cmsg-test --ps --tipc
./cmsg-test --ps --tipc --queue

When using tipc on the workstation don't forget to load the tipc kernel module:
sudo modprobe tipc

* run tests:
protobuf-c/src/test$ ./cmsg-test [options]


* for gdb:
might be useful to add debugging symbols to library:

protobuf-c/src/Makefile.am
AM_CFLAGS = -I=/usr/include/glib-2.0 \
            -I=/usr/lib/glib-2.0/include \
            -Wall -Werror -g  <-------------------

use libtool for running the file:
protobuf-c/src/test$ libtool --mode=execute gdb cmsg-test


* run tests with valgrind:
protobuf-c/src/test$ ./cmsg-test-valgrind [options]

Note for valgrind tests:
Because we are using glib we have 5 blocks still reachable showing up in valgrind.
Glib confuses valgrind with it's slice allocator. This leak shows up in the
valgrind LEAK SUMMARY and shouldn't be something we have to worry about.
We should have any definitely lost, indirectly lost or possibly lost blocks.

Valgrind also shows memory corruptions after the leak summary.
These can be dangling pointers or invalid memory access. 

* Valgrind output with "normal" glib slice alloc leak:

=32659== Searching for pointers to 5 not-freed blocks
==32659== Checked 128,384 bytes
==32659== 
==32659== 4 bytes in 1 blocks are still reachable in loss record 1 of 5
==32659==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32659==    by 0x56B0215: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x56B0978: g_private_get (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568DC50: g_slice_alloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568E1B5: g_slice_alloc0 (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x4E38547: cmsg_server_new (in /home/florianr/dev/torus/protobuf-c/src/.libs/libprotobuf-c.so.0.0.0)
==32659==    by 0x401DC4: run_server (cmsg-test.c:300)
==32659==    by 0x5417E99: start_thread (pthread_create.c:308)
==32659== 
==32659== 40 bytes in 1 blocks are still reachable in loss record 2 of 5
==32659==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32659==    by 0x56B02AE: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x56B036C: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x56B05A8: g_mutex_lock (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x5646DC7: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568DE94: g_slice_alloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568E1B5: g_slice_alloc0 (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x4E38547: cmsg_server_new (in /home/florianr/dev/torus/protobuf-c/src/.libs/libprotobuf-c.so.0.0.0)
==32659==    by 0x401DC4: run_server (cmsg-test.c:300)
==32659==    by 0x5417E99: start_thread (pthread_create.c:308)
==32659== 
==32659== 40 bytes in 1 blocks are still reachable in loss record 3 of 5
==32659==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32659==    by 0x56B02AE: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x56B0578: g_mutex_init (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x5646F50: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568DE94: g_slice_alloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568E1B5: g_slice_alloc0 (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x4E38547: cmsg_server_new (in /home/florianr/dev/torus/protobuf-c/src/.libs/libprotobuf-c.so.0.0.0)
==32659==    by 0x401DC4: run_server (cmsg-test.c:300)
==32659==    by 0x5417E99: start_thread (pthread_create.c:308)
==32659== 
==32659== 40 bytes in 1 blocks are still reachable in loss record 4 of 5
==32659==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32659==    by 0x56B02AE: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x56B0578: g_mutex_init (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x5646F7A: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568DE94: g_slice_alloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568E1B5: g_slice_alloc0 (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x4E38547: cmsg_server_new (in /home/florianr/dev/torus/protobuf-c/src/.libs/libprotobuf-c.so.0.0.0)
==32659==    by 0x401DC4: run_server (cmsg-test.c:300)
==32659==    by 0x5417E99: start_thread (pthread_create.c:308)
==32659== 
==32659== 2,032 bytes in 1 blocks are still reachable in loss record 5 of 5
==32659==    at 0x4C29DB4: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==32659==    by 0x567AAA0: g_malloc0 (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x5646FFA: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568DE94: g_slice_alloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x568E1B5: g_slice_alloc0 (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.4)
==32659==    by 0x4E3A333: cmsg_client_new (in /home/florianr/dev/torus/protobuf-c/src/.libs/libprotobuf-c.so.0.0.0)
==32659==    by 0x401FC7: run_client (cmsg-test.c:385)
==32659==    by 0x4023C8: main (cmsg-test.c:508)
==32659== 
==32659== LEAK SUMMARY:
==32659==    definitely lost: 0 bytes in 0 blocks
==32659==    indirectly lost: 0 bytes in 0 blocks
==32659==      possibly lost: 0 bytes in 0 blocks
==32659==    still reachable: 2,156 bytes in 5 blocks  <--------- okish - it's glib's fault
==32659==         suppressed: 0 bytes in 0 blocks

